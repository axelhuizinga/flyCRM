<?php
/**
 * Generated by Haxe 3.4.0
 */

namespace php\_Boot;

use \php\Boot;

class HxClass {
	/**
	 * @var string
	 */
	public $phpClassName;


	/**
	 * @param string $phpClassName
	 * 
	 * @return void
	 */
	public function __construct ($phpClassName) {
		$this->phpClassName = $phpClassName;
	}


	/**
	 * @param string $method
	 * @param mixed $args
	 * 
	 * @return mixed
	 */
	public function __call ($method, $args) {
		return call_user_func_array(($this->phpClassName??'null') . "::" . ($method??'null'), $args);
	}


	/**
	 * @param string $property
	 * 
	 * @return mixed
	 */
	public function __get ($property) {
		if (Boot::hasGetter($this->phpClassName, $property)) {
			$tmp = $this->phpClassName;
			$tmp1 = "get_" . ($property??'null');
			return $tmp::{$tmp1}();
		} else {
			$tmp2 = $this->phpClassName;
			$tmp3 = $property;
			return $tmp2::${$tmp3};
		}
	}


	/**
	 * @param string $property
	 * @param mixed $value
	 * 
	 * @return void
	 */
	public function __set ($property, $value) {
		if (Boot::hasSetter($this->phpClassName, $property)) {
			$tmp = $this->phpClassName;
			$tmp1 = "set_" . ($property??'null');
			$tmp::{$tmp1}($value);
		} else {
			$tmp2 = $this->phpClassName;
			$tmp3 = $property;
			$tmp2::${$tmp3} = $value;
		}
	}
}


Boot::registerClass(HxClass::class, 'php._Boot.HxClass');
