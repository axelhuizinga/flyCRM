<?php
/**
 * Generated by Haxe 3.4.0
 */

namespace haxe\ds;

use \haxe\IMap;
use \php\Boot;
use \php\_NativeArray\NativeArrayIterator;

class StringMap implements IMap {
	/**
	 * @var mixed
	 */
	public $data;


	/**
	 * @return void
	 */
	public function __construct () {
		$this->data = [];
	}


	/**
	 * @return object
	 */
	public function iterator () {
		return new NativeArrayIterator($this->data);
	}


	/**
	 * @return string
	 */
	public function toString () {
		$parts = [];
		foreach (($this->data) as $key => $value) {
			$tmp = "" . ($key??'null') . " => " . (\Std::string($value)??'null');
			array_push($parts, $tmp);
		};
		return "{" . (implode(", ", $parts)??'null') . "}";
	}


	public function __toString() {
		return $this->toString();
	}
}


Boot::registerClass(StringMap::class, 'haxe.ds.StringMap');
