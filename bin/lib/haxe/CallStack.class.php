<?php

// Generated by Haxe 3.4.0 (git build development @ e08d018)
class haxe_CallStack {
	public function __construct(){}
	static function callStack() {
		return haxe_CallStack::makeStack("%s");
	}
	static function makeStack($s) {
		if(!isset($GLOBALS[$s])) {
			return (new _hx_array(array()));
		}
		$a = $GLOBALS[$s];
		$m = (new _hx_array(array()));
		{
			$_g1 = 0;
			$_g = null;
			if($s === "%s") {
				$_g = 2;
			} else {
				$_g = 0;
			}
			$_g2 = $a->length - $_g;
			while($_g1 < $_g2) {
				$_g1 = $_g1 + 1;
				$i = $_g1 - 1;
				$d = _hx_explode("::", $a[$i]);
				$m->unshift(haxe_StackItem::Method($d[0], $d[1]));
				unset($i,$d);
			}
		}
		return $m;
	}
	function __toString() { return 'haxe.CallStack'; }
}
