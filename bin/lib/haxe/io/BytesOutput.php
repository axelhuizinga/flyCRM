<?php
/**
 * Generated by Haxe 3.4.0
 */

namespace haxe\io;

use \php\Boot;
use \php\_Boot\HxException;
use \haxe\io\_BytesData\Container;

class BytesOutput extends Output {
	/**
	 * @var BytesBuffer
	 */
	public $b;


	/**
	 * @return void
	 */
	public function __construct () {
		$this->b = new BytesBuffer();
	}


	/**
	 * @return Bytes
	 */
	public function getBytes () {
		return $this->b->getBytes();
	}


	/**
	 * @param int $c
	 * 
	 * @return void
	 */
	public function writeByte ($c) {
		($this->b->b .= chr($c));
	}


	/**
	 * @param Bytes $buf
	 * @param int $pos
	 * @param int $len
	 * 
	 * @return int
	 */
	public function writeBytes ($buf, $pos, $len) {
		$tmp = null;
		$tmp1 = null;
		if ($pos >= 0) {
			$tmp1 = $len < 0;
		} else {
			$tmp1 = true;
		}
		if (!$tmp1) {
			$tmp = ($pos + $len) > $buf->length;
		} else {
			$tmp = true;
		}
		if ($tmp) {
			throw new HxException(Error::OutsideBounds());
		} else {
			($this->b->b .= (new Container(substr($buf->b->s, $pos, $len)))->s);
		}

		return $len;
	}
}


Boot::registerClass(BytesOutput::class, 'haxe.io.BytesOutput');
