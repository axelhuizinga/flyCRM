<?php
/**
 * Generated by Haxe 3.4.0
 */

namespace _Array;

use \php\_Boot\HxClosure;
use \php\Boot;

class ArrayIterator {
	/**
	 * @var \Array_hx
	 */
	public $arr;
	/**
	 * @var int
	 */
	public $idx;


	/**
	 * @param \Array_hx $arr
	 * 
	 * @return void
	 */
	public function __construct ($arr) {
		$this->arr = $arr;
		$this->idx = 0;
	}


	/**
	 * @param string $method
	 * 
	 * @return HxClosure
	 */
	public function __get ($method) {
		switch ($method) {
			case "hasNext":
			case "next":
				return new HxClosure($this, $method);
				break;
			default:
				return null;
				break;
		}
	}


	/**
	 * @return bool
	 */
	public function hasNext () {
		return $this->idx < $this->arr->length;
	}


	/**
	 * @return mixed
	 */
	public function next () {
		return ($this->arr->arr[$this->idx++] ?? null);
	}
}


Boot::registerClass(ArrayIterator::class, '_Array.ArrayIterator');
