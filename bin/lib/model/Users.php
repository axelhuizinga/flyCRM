<?php
/**
 * Generated by Haxe 3.4.0
 */

namespace model;

use \haxe\ds\StringMap;
use \php\Boot;
use \haxe\Log;
use \php\_Boot\HxAnon;

class Users extends \Model {
	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	static public function create ($param) {
		$me = new Users($param);
		return json_encode($me->globals, 320);
	}


	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public function __construct ($param = null) {
		parent::__construct($param);
	}


	/**
	 * @param string $user
	 * 
	 * @return string
	 */
	public function ex_user ($user = null) {
		$user = \S::$my->real_escape_string($user);
		$this->query("SELECT * FROM fly_crm.agent_ids WHERE ANr=" . ($user??'null'));
		return "";
	}


	/**
	 * @param string $user
	 * 
	 * @return \Array_hx
	 */
	public function get_info ($user = null) {
		$sb = new \StringBuf();
		$phValues = new \Array_hx();
		$result = new \Array_hx();
		$param = new StringMap();
		$param->data["table"] = "asterisk.vicidial_users";
		$param->data["fields"] = "user,user_level, pass,full_name";
		$tmp = null;
		if ($user === null) {
			$tmp = "user_group|AGENTS_A";
		} else {
			$tmp = "user|" . ($user??'null');
		}
		$param->data["where"] = $tmp;

		$param->data["limit"] = "50";
		$userMap = $this->doSelect($param, $sb, $phValues);
		(Log::$trace)($param, new HxAnon([
			"fileName" => "Users.hx",
			"lineNumber" => 37,
			"className" => "model.Users",
			"methodName" => "get_info",
		]));
		$_g1 = 0;
		$_g = $this->num_rows;
		while ($_g1 < $_g) {
			unset($n);
			$_g1 = $_g1 + 1;
			$n = $_g1 - 1;
			$result->push(new HxAnon([
				"user" => $userMap[$n]["user"],
				"full_name" => $userMap[$n]["full_name"],
			]));
		}

		return $result;
	}
}


Boot::registerClass(Users::class, 'model.Users');
