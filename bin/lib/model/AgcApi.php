<?php
/**
 * Generated by Haxe 3.4.0
 */

namespace model;

use \haxe\ds\StringMap;
use \php\Boot;
use \haxe\Http;
use \haxe\Log;
use \php\_Boot\HxString;
use \php\_Boot\HxAnon;

class AgcApi extends \Model {
	/**
	 * @var StringMap
	 */
	public $statuses;
	/**
	 * @var string
	 */
	public $vicidialPass;
	/**
	 * @var string
	 */
	public $vicidialUser;


	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	static public function create ($param) {
		$self = new AgcApi();
		$self->vicidialUser = \S::$vicidialUser;
		$self->vicidialPass = \S::$vicidialPass;
		return \Reflect::callMethod($self, \Reflect::field($self, ($param->data["action"] ?? null)), \Array_hx::wrap([$param]));
	}


	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public function __construct ($param = null) {
		parent::__construct($param);
	}


	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	public function check4Update ($param) {
		$lead_id = \Std::parseInt(($param->data["lead_id"] ?? null));
		(Log::$trace)((\S::$host??'null') . ":" . (\Std::string($lead_id)??'null'), new HxAnon([
			"fileName" => "AgcApi.hx",
			"lineNumber" => 30,
			"className" => "model.AgcApi",
			"methodName" => "check4Update",
		]));
		return $this->json_response($this->query("SELECT state FROM vicidial_list WHERE lead_id=" . (\Std::string($lead_id)??'null'))[0]);
	}


	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	public function external_dial ($param) {
		$url = "http://xpress.mein-dialer.com/agc/api.php?source=flyCRM&user=" . ($this->vicidialUser??'null') . "&pass=" . ($this->vicidialPass??'null') . "&function=external_dial&search=NO&preview=NO&focus=NO&lead_id=" . (($param->data["lead_id"] ?? null)??'null') . "&agent_user=" . (($param->data["agent_user"] ?? null)??'null');
		(Log::$trace)($url, new HxAnon([
			"fileName" => "AgcApi.hx",
			"lineNumber" => 39,
			"className" => "model.AgcApi",
			"methodName" => "external_dial",
		]));
		$agcResponse = Http::requestUrl($url);
		(Log::$trace)($agcResponse, new HxAnon([
			"fileName" => "AgcApi.hx",
			"lineNumber" => 41,
			"className" => "model.AgcApi",
			"methodName" => "external_dial",
		]));
		$tmp = null;
		if (HxString::indexOf($agcResponse, "SUCCESS") === 0) {
			$tmp = "OK";
		} else {
			$tmp = $agcResponse;
		}
		return $this->json_response($tmp);
	}


	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	public function external_hangup ($param) {
		if (($param->data["pause"] ?? null) === "Y") {
			Http::requestUrl("http://xpress.mein-dialer.com/agc/api.php?source=flyCRM&user=" . ($this->vicidialUser??'null') . "&pass=" . ($this->vicidialPass??'null') . "&function=external_pause&value=PAUSE&agent_user=" . (($param->data["agent_user"] ?? null)??'null'));
		}
		$url = "http://xpress.mein-dialer.com/agc/api.php?source=flyCRM&user=" . ($this->vicidialUser??'null') . "&pass=" . ($this->vicidialPass??'null') . "&function=external_hangup&value=1&agent_user=" . (($param->data["agent_user"] ?? null)??'null');
		(Log::$trace)($url, new HxAnon([
			"fileName" => "AgcApi.hx",
			"lineNumber" => 50,
			"className" => "model.AgcApi",
			"methodName" => "external_hangup",
		]));
		$agcResponse = Http::requestUrl($url);
		(Log::$trace)($agcResponse, new HxAnon([
			"fileName" => "AgcApi.hx",
			"lineNumber" => 52,
			"className" => "model.AgcApi",
			"methodName" => "external_hangup",
		]));
		if (HxString::indexOf($agcResponse, "SUCCESS") === 0) {
			if (\Util::any2bool(($param->data["dispo"] ?? null))) {
				return $this->external_status($param);
			} else {
				$this->data = new HxAnon([
					"response" => "OK",
					"choice" => $this->query("(SELECT `status`,`status_name` FROM `vicidial_statuses` WHERE `selectable`=\"Y\") UNION (SELECT `status`,`status_name` FROM `vicidial_campaign_statuses` WHERE `selectable`=\"Y\" AND campaign_id=\"" . (\S::$my->real_escape_string(($param->data["campaign_id"] ?? null))??'null') . "\") ORDER BY `status`"),
				]);
				return $this->json_encode();
			}
		}
		return $this->json_response($agcResponse);
	}


	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	public function external_status ($param) {
		$status = ($param->data["dispo"] ?? null);
		$url = "http://xpress.mein-dialer.com/agc/api.php?source=flyCRM&user=" . ($this->vicidialUser??'null') . "&pass=" . ($this->vicidialPass??'null') . "&function=external_status&value=" . ($status??'null') . "&agent_user=" . (($param->data["agent_user"] ?? null)??'null');
		(Log::$trace)($url, new HxAnon([
			"fileName" => "AgcApi.hx",
			"lineNumber" => 78,
			"className" => "model.AgcApi",
			"methodName" => "external_status",
		]));
		$agcResponse = Http::requestUrl($url);
		$tmp = null;
		if (HxString::indexOf($agcResponse, "SUCCESS") === 0) {
			$tmp = "OK";
		} else {
			$tmp = $agcResponse;
		}
		return $this->json_response($tmp);
	}


	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	public function update_fields_x ($param) {
		$state = ($param->data["state"] ?? null);
		$lead_id = \Std::parseInt(($param->data["lead_id"] ?? null));
		$tmp = null;
		if (\S::$my->query("UPDATE vicidial_list SET state=\"" . ($state??'null') . "\" WHERE lead_id=" . (\Std::string($lead_id)??'null'))) {
			$tmp = "OK";
		} else {
			$tmp = \S::$my->error;
		}
		return $this->json_response($tmp);
	}
}


Boot::registerClass(AgcApi::class, 'model.AgcApi');
