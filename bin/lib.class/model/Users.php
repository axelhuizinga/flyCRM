<?php
/**
 * Generated by Haxe 4.0.0-preview.4+1e3e5e016
 */

namespace model;

use \haxe\ds\StringMap;
use \php\Boot;
use \haxe\Log;
use \php\_Boot\HxAnon;

class Users extends \Model {
	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	static public function create ($param) {
		#src/model/Users.hx:22: characters 3-35
		$me = new Users($param);
		#src/model/Users.hx:23: characters 3-62
		return json_encode($me->globals, 320);
	}

	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public function __construct ($param = null) {
		#src/model/Users.hx:17: lines 17-58
		parent::__construct($param);
	}

	/**
	 * @param string $user
	 * 
	 * @return string
	 */
	public function ex_user ($user = null) {
		#src/model/Users.hx:54: characters 3-39
		$user = \S::$my->real_escape_string($user);
		#src/model/Users.hx:55: characters 3-91
		$ex_user_data = $this->query("SELECT * FROM fly_crm.agent_ids WHERE ANr=" . ($user??'null'));
		#src/model/Users.hx:56: characters 3-12
		return "";
	}

	/**
	 * @param string $user
	 * 
	 * @return \Array_hx
	 */
	public function get_info ($user = null) {
		#src/model/Users.hx:28: characters 3-38
		$sb = new \StringBuf();
		#src/model/Users.hx:29: characters 3-52
		$phValues = new \Array_hx();
		#src/model/Users.hx:30: characters 3-44
		$result = new \Array_hx();
		#src/model/Users.hx:31: characters 3-49
		$param = new StringMap();
		#src/model/Users.hx:32: characters 3-48
		$param->data["table"] = "asterisk.vicidial_users";
		#src/model/Users.hx:33: characters 3-57
		$param->data["fields"] = "user,user_level, pass,full_name";
		#src/model/Users.hx:34: characters 3-84
		$param->data["where"] = ($user === null ? "user_group|LIKE|AGENT%,active|Y" : "user|" . ($user??'null'));
		#src/model/Users.hx:36: characters 3-27
		$param->data["limit"] = "50";
		#src/model/Users.hx:37: characters 3-59
		$userMap = $this->doSelect($param, $sb, $phValues);
		#src/model/Users.hx:38: characters 3-8
		(Log::$trace)($param, new HxAnon([
			"fileName" => "src/model/Users.hx",
			"lineNumber" => 38,
			"className" => "model.Users",
			"methodName" => "get_info",
		]));
		#src/model/Users.hx:41: lines 41-48
		$_g1 = 0;
		#src/model/Users.hx:41: lines 41-48
		$_g = $this->num_rows;
		#src/model/Users.hx:41: lines 41-48
		while ($_g1 < $_g) {
			#src/model/Users.hx:41: lines 41-48
			$_g1 = $_g1 + 1;
			#src/model/Users.hx:41: characters 8-9
			$n = $_g1 - 1;
			#src/model/Users.hx:43: lines 43-47
			$result->arr[$result->length] = new HxAnon([
				"user" => $userMap[$n]["user"],
				"full_name" => $userMap[$n]["full_name"],
			]);
			#src/model/Users.hx:43: lines 43-47
			++$result->length;

		}

		#src/model/Users.hx:49: characters 3-16
		return $result;
	}
}

Boot::registerClass(Users::class, 'model.Users');
