<?php
/**
 * Generated by Haxe 4.0.0-preview.4+1e3e5e016
 */

namespace model;

use \haxe\ds\StringMap;
use \php\Boot;
use \sys\Http;
use \haxe\Log;
use \php\_Boot\HxString;
use \php\_Boot\HxAnon;

class AgcApi extends \Model {
	/**
	 * @var StringMap
	 */
	public $statuses;
	/**
	 * @var string
	 */
	public $vicidialPass;
	/**
	 * @var string
	 */
	public $vicidialUser;

	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	static public function create ($param) {
		#src/model/AgcApi.hx:21: characters 3-34
		$self = new AgcApi();
		#src/model/AgcApi.hx:22: characters 3-37
		$self->vicidialUser = \S::$vicidialUser;
		#src/model/AgcApi.hx:23: characters 3-37
		$self->vicidialPass = \S::$vicidialPass;
		#src/model/AgcApi.hx:24: characters 3-84
		return \Reflect::callMethod($self, \Reflect::field($self, ($param->data["action"] ?? null)), \Array_hx::wrap([$param]));
	}

	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public function __construct ($param = null) {
		#src/model/AgcApi.hx:13: lines 13-100
		parent::__construct($param);
	}

	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	public function check4Update ($param) {
		#src/model/AgcApi.hx:29: characters 3-60
		$lead_id = \Std::parseInt(($param->data["lead_id"] ?? null));
		#src/model/AgcApi.hx:30: characters 3-8
		(Log::$trace)((\S::$host??'null') . ":" . (\Std::string($lead_id)??'null'), new HxAnon([
			"fileName" => "src/model/AgcApi.hx",
			"lineNumber" => 30,
			"className" => "model.AgcApi",
			"methodName" => "check4Update",
		]));
		#src/model/AgcApi.hx:31: characters 3-91
		return $this->json_response($this->query("SELECT state FROM vicidial_list WHERE lead_id=" . (\Std::string($lead_id)??'null'))[0]);
	}

	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	public function external_dial ($param) {
		#src/model/AgcApi.hx:37: lines 37-38
		$url = "" . (\S::$request_scheme??'null') . "://" . (\S::$host??'null') . "/agc/api.php?source=flyCRM&user=" . ($this->vicidialUser??'null') . "&pass=" . ($this->vicidialPass??'null') . "&function=external_dial&search=NO&preview=NO&focus=NO&lead_id=" . (($param->data["lead_id"] ?? null)??'null') . "&agent_user=" . (($param->data["agent_user"] ?? null)??'null');
		#src/model/AgcApi.hx:39: characters 3-8
		(Log::$trace)($url, new HxAnon([
			"fileName" => "src/model/AgcApi.hx",
			"lineNumber" => 39,
			"className" => "model.AgcApi",
			"methodName" => "external_dial",
		]));
		#src/model/AgcApi.hx:40: characters 3-49
		$agcResponse = Http::requestUrl($url);
		#src/model/AgcApi.hx:41: characters 3-8
		(Log::$trace)($agcResponse, new HxAnon([
			"fileName" => "src/model/AgcApi.hx",
			"lineNumber" => 41,
			"className" => "model.AgcApi",
			"methodName" => "external_dial",
		]));
		#src/model/AgcApi.hx:42: characters 3-81
		return $this->json_response((HxString::indexOf($agcResponse, "SUCCESS") === 0 ? "OK" : $agcResponse));
	}

	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	public function external_hangup ($param) {
		#src/model/AgcApi.hx:47: lines 47-48
		if (($param->data["pause"] ?? null) === "Y") {
			#src/model/AgcApi.hx:48: characters 4-192
			Http::requestUrl("" . (\S::$request_scheme??'null') . "://" . (\S::$host??'null') . "/agc/api.php?source=flyCRM&user=" . ($this->vicidialUser??'null') . "&pass=" . ($this->vicidialPass??'null') . "&function=external_pause&value=PAUSE&agent_user=" . (($param->data["agent_user"] ?? null)??'null'));
		}
		#src/model/AgcApi.hx:49: characters 3-189
		$url = "" . (\S::$request_scheme??'null') . "://" . (\S::$host??'null') . "/agc/api.php?source=flyCRM&user=" . ($this->vicidialUser??'null') . "&pass=" . ($this->vicidialPass??'null') . "&function=external_hangup&value=1&agent_user=" . (($param->data["agent_user"] ?? null)??'null');
		#src/model/AgcApi.hx:50: characters 3-8
		(Log::$trace)($url, new HxAnon([
			"fileName" => "src/model/AgcApi.hx",
			"lineNumber" => 50,
			"className" => "model.AgcApi",
			"methodName" => "external_hangup",
		]));
		#src/model/AgcApi.hx:51: characters 3-49
		$agcResponse = Http::requestUrl($url);
		#src/model/AgcApi.hx:52: characters 3-8
		(Log::$trace)($agcResponse, new HxAnon([
			"fileName" => "src/model/AgcApi.hx",
			"lineNumber" => 52,
			"className" => "model.AgcApi",
			"methodName" => "external_hangup",
		]));
		#src/model/AgcApi.hx:53: lines 53-69
		if (HxString::indexOf($agcResponse, "SUCCESS") === 0) {
			#src/model/AgcApi.hx:55: characters 8-37
			$v = ($param->data["dispo"] ?? null);
			#src/model/AgcApi.hx:55: lines 55-68
			if (($v !== null) && !Boot::equal($v, 0) && ($v !== "")) {
				#src/model/AgcApi.hx:57: characters 5-34
				return $this->external_status($param);
			} else {
				#src/model/AgcApi.hx:61: characters 5-80
				$campaign_id = \S::$my->real_escape_string(($param->data["campaign_id"] ?? null));
				#src/model/AgcApi.hx:62: characters 5-242
				$sql = "(SELECT `status`,`status_name` FROM `vicidial_statuses` WHERE `selectable`=\"Y\") UNION (SELECT `status`,`status_name` FROM `vicidial_campaign_statuses` WHERE `selectable`=\"Y\" AND campaign_id=\"" . ($campaign_id??'null') . "\") ORDER BY `status`";
				#src/model/AgcApi.hx:63: lines 63-66
				$this->data = new HxAnon([
					"response" => "OK",
					"choice" => $this->query($sql),
				]);
				#src/model/AgcApi.hx:67: characters 5-25
				return $this->json_encode();
			}
		}
		#src/model/AgcApi.hx:71: characters 3-36
		return $this->json_response($agcResponse);
	}

	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	public function external_status ($param) {
		#src/model/AgcApi.hx:76: characters 3-42
		$status = ($param->data["dispo"] ?? null);
		#src/model/AgcApi.hx:77: characters 3-188
		$url = "" . (\S::$request_scheme??'null') . "://" . (\S::$host??'null') . "/agc/api.php?source=flyCRM&user=" . ($this->vicidialUser??'null') . "&pass=" . ($this->vicidialPass??'null') . "&function=external_status&value=" . ($status??'null') . "&agent_user=" . (($param->data["agent_user"] ?? null)??'null');
		#src/model/AgcApi.hx:78: characters 3-8
		(Log::$trace)($url, new HxAnon([
			"fileName" => "src/model/AgcApi.hx",
			"lineNumber" => 78,
			"className" => "model.AgcApi",
			"methodName" => "external_status",
		]));
		#src/model/AgcApi.hx:79: characters 3-49
		$agcResponse = Http::requestUrl($url);
		#src/model/AgcApi.hx:80: characters 3-81
		return $this->json_response((HxString::indexOf($agcResponse, "SUCCESS") === 0 ? "OK" : $agcResponse));
	}

	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	public function update_fields_x ($param) {
		#src/model/AgcApi.hx:85: characters 3-41
		$state = ($param->data["state"] ?? null);
		#src/model/AgcApi.hx:86: characters 3-8
		(Log::$trace)($state, new HxAnon([
			"fileName" => "src/model/AgcApi.hx",
			"lineNumber" => 86,
			"className" => "model.AgcApi",
			"methodName" => "update_fields_x",
		]));
		#src/model/AgcApi.hx:91: characters 3-60
		$lead_id = \Std::parseInt(($param->data["lead_id"] ?? null));
		#src/model/AgcApi.hx:92: characters 3-98
		$agcResponse = \S::$my->query("UPDATE vicidial_list SET state=\"" . ($state??'null') . "\" WHERE lead_id=" . (\Std::string($lead_id)??'null'));
		#src/model/AgcApi.hx:94: characters 3-56
		return $this->json_response(($agcResponse ? "OK" : \S::$my->error));
	}
}

Boot::registerClass(AgcApi::class, 'model.AgcApi');
