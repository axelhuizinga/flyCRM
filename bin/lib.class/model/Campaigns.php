<?php
/**
 * Generated by Haxe 4.0.0-preview.4+1e3e5e016
 */

namespace model;

use \haxe\ds\StringMap;
use \php\Boot;
use \haxe\Log;
use \php\_Boot\HxAnon;

class Campaigns extends \Model {
	/**
	 * @var string
	 */
	public $campaign_id;

	/**
	 * @param StringMap $param
	 * 
	 * @return mixed
	 */
	static public function create ($param) {
		#src/model/Campaigns.hx:20: characters 3-40
		$self = new Campaigns();
		#src/model/Campaigns.hx:21: characters 3-36
		$self->table = "vicidial_campaigns";
		#src/model/Campaigns.hx:22: characters 3-8
		(Log::$trace)($param, new HxAnon([
			"fileName" => "src/model/Campaigns.hx",
			"lineNumber" => 22,
			"className" => "model.Campaigns",
			"methodName" => "create",
		]));
		#src/model/Campaigns.hx:23: characters 3-84
		return \Reflect::callMethod($self, \Reflect::field($self, ($param->data["action"] ?? null)), \Array_hx::wrap([$param]));
	}

	/**
	 * @param StringMap $param
	 * 
	 * @return void
	 */
	public function __construct ($param = null) {
		#src/model/Campaigns.hx:14: lines 14-52
		parent::__construct($param);
	}

	/**
	 * @param StringMap $q
	 * 
	 * @return mixed
	 */
	public function findLeads ($q) {
		#src/model/Campaigns.hx:31: characters 3-38
		$sb = new \StringBuf();
		#src/model/Campaigns.hx:32: characters 3-52
		$phValues = new \Array_hx();
		#src/model/Campaigns.hx:33: characters 3-39
		$fields = ($q->data["fields"] ?? null);
		#src/model/Campaigns.hx:35: characters 22-147
		$tmp = null;
		#src/model/Campaigns.hx:35: characters 22-147
		if ($fields !== null) {
			#src/model/Campaigns.hx:35: characters 53-128
			$_this = \Array_hx::wrap(explode(",", $fields));
			#src/model/Campaigns.hx:35: characters 53-128
			$result = [];
			#src/model/Campaigns.hx:35: characters 53-128
			$_g1 = 0;
			#src/model/Campaigns.hx:35: characters 53-128
			$_g = $_this->length;
			#src/model/Campaigns.hx:35: characters 53-128
			while ($_g1 < $_g) {
				#src/model/Campaigns.hx:35: characters 53-128
				$_g1 = $_g1 + 1;
				#src/model/Campaigns.hx:35: characters 53-128
				$i = $_g1 - 1;
				#src/model/Campaigns.hx:35: characters 53-128
				$result[] = \S::$my->real_escape_string($_this->arr[$i]);
			}

			#src/model/Campaigns.hx:35: characters 22-147
			$tmp = $this->fieldFormat(\Array_hx::wrap($result)->join(","));
		} else {
			#src/model/Campaigns.hx:35: characters 22-147
			$tmp = "*";
		}
		#src/model/Campaigns.hx:35: characters 3-148
		$sb->add("SELECT " . ($tmp??'null'));
		#src/model/Campaigns.hx:37: characters 3-93
		$sb->add(" FROM  `vicidial_list` WHERE `list_id` IN( SELECT `list_id` FROM vicidial_lists ");
		#src/model/Campaigns.hx:38: characters 3-37
		$where = ($q->data["where"] ?? null);
		#src/model/Campaigns.hx:39: lines 39-40
		if ($where !== null) {
			#src/model/Campaigns.hx:40: characters 4-34
			$this->buildCond($where, $sb, $phValues);
		}
		#src/model/Campaigns.hx:41: characters 3-14
		$sb->add(")");
		#src/model/Campaigns.hx:42: characters 3-37
		$order = ($q->data["order"] ?? null);
		#src/model/Campaigns.hx:43: lines 43-44
		if ($order !== null) {
			#src/model/Campaigns.hx:44: characters 4-25
			$this->buildOrder($order, $sb);
		}
		#src/model/Campaigns.hx:45: characters 3-37
		$limit = ($q->data["limit"] ?? null);
		#src/model/Campaigns.hx:46: characters 3-45
		$this->buildLimit(($limit === null ? "15" : $limit), $sb);
		#src/model/Campaigns.hx:47: lines 47-49
		$this->data = new HxAnon(["rows" => $this->execute($sb->b, $phValues)]);
		#src/model/Campaigns.hx:50: characters 3-23
		return $this->json_encode();
	}
}

Boot::registerClass(Campaigns::class, 'model.Campaigns');
