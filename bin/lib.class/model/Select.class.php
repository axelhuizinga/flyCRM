<?php

// Generated by Haxe 3.4.7
class model_Select extends model_Input {
	public function __construct() { if(!php_Boot::$skip_constructor) {
		parent::__construct();
	}}
	public function selectCampaign($param) {
		return $this->json_encode();
	}
	public function prepare($where) {
		$wParam = _hx_explode(",", $where);
		$where = "";
		if(Lambda::has($wParam, "filter=1")) {
			$wParam = $wParam->filter(array(new _hx_lambda(array(), "model_Select_0"), 'execute'));
		}
		$tmp = null;
		if($wParam->length > 0) {
			$tmp = $where === "";
		} else {
			$tmp = false;
		}
		if($tmp) {
			$where = "";
		}
		{
			$_g = 0;
			while($_g < $wParam->length) {
				$w = $wParam[$_g];
				$_g = $_g + 1;
				if($where === "") {
					$where = "WHERE " . _hx_string_or_null($w);
				} else {
					$where = " AND " . _hx_string_or_null($w);
				}
				unset($w);
			}
		}
		haxe_Log::trace($where, _hx_anonymous(array("fileName" => "Select.hx", "lineNumber" => 62, "className" => "model.Select", "methodName" => "prepare")));
		return $where;
	}
	static function create($param) {
		$self = new model_Select();
		haxe_Log::trace($param, _hx_anonymous(array("fileName" => "Select.hx", "lineNumber" => 16, "className" => "model.Select", "methodName" => "create")));
		return Reflect::callMethod($self, Reflect::field($self, $param->get("action")), (new _hx_array(array($param))));
	}
	function __toString() { return 'model.Select'; }
}
function model_Select_0($f) {
	{
		return $f !== "filter=1";
	}
}
