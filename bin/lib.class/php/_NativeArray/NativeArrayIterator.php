<?php
/**
 * Generated by Haxe 4.0.0-preview.4+1e3e5e016
 */

namespace php\_NativeArray;

use \php\Boot;

class NativeArrayIterator {
	/**
	 * @var mixed
	 */
	public $arr;
	/**
	 * @var bool
	 */
	public $hasMore;

	/**
	 * @param mixed $a
	 * 
	 * @return void
	 */
	public function __construct ($a) {
		#C:\HaxeToolkit\haxe\std/php/NativeArray.hx:54: characters 3-10
		$this->arr = $a;
		#C:\HaxeToolkit\haxe\std/php/NativeArray.hx:55: characters 3-35
		$this->hasMore = reset($this->arr) !== false;
	}

	/**
	 * @return bool
	 */
	public function hasNext () {
		#C:\HaxeToolkit\haxe\std/php/NativeArray.hx:59: characters 3-17
		return $this->hasMore;
	}

	/**
	 * @return mixed
	 */
	public function next () {
		#C:\HaxeToolkit\haxe\std/php/NativeArray.hx:63: characters 3-30
		$result = current($this->arr);
		#C:\HaxeToolkit\haxe\std/php/NativeArray.hx:64: characters 3-34
		$this->hasMore = next($this->arr) !== false;
		#C:\HaxeToolkit\haxe\std/php/NativeArray.hx:65: characters 3-16
		return $result;
	}
}

Boot::registerClass(NativeArrayIterator::class, 'php._NativeArray.NativeArrayIterator');
