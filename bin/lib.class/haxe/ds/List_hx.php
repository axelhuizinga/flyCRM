<?php
/**
 * Generated by Haxe 4.0.0-preview.4+1e3e5e016
 */

namespace haxe\ds;

use \php\Boot;
use \haxe\ds\_List\ListNode;

class List_hx {
	/**
	 * @var ListNode
	 */
	public $h;
	/**
	 * @var int
	 */
	public $length;
	/**
	 * @var ListNode
	 */
	public $q;

	/**
	 * @return void
	 */
	public function __construct () {
		#C:\HaxeToolkit\haxe\std/haxe/ds/List.hx:45: characters 3-13
		$this->length = 0;
	}

	/**
	 * @param mixed $item
	 * 
	 * @return void
	 */
	public function add ($item) {
		#C:\HaxeToolkit\haxe\std/haxe/ds/List.hx:54: characters 3-39
		$x = new ListNode($item, null);
		#C:\HaxeToolkit\haxe\std/haxe/ds/List.hx:55: lines 55-58
		if ($this->h === null) {
			#C:\HaxeToolkit\haxe\std/haxe/ds/List.hx:56: characters 4-9
			$this->h = $x;
		} else {
			#C:\HaxeToolkit\haxe\std/haxe/ds/List.hx:58: characters 4-14
			$this->q->next = $x;
		}
		#C:\HaxeToolkit\haxe\std/haxe/ds/List.hx:59: characters 3-8
		$this->q = $x;
		#C:\HaxeToolkit\haxe\std/haxe/ds/List.hx:60: characters 3-11
		$this->length++;
	}
}

Boot::registerClass(List_hx::class, 'haxe.ds.List');
